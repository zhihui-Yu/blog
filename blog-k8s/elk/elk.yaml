version: '3.3'
# docker-compose -f /data/elk/elk.yaml up -d
# filebeat -> local file -> output to logstash -> logstash to es -> kibana show
services:
  elastic:
    container_name: my-es
    image: elasticsearch:7.7.1

    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery: "type=single-node"

    volumes:
      - /data/elk/es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /data/elk/es/data:/usr/share/elasticsearch/data
      - /data/elk/es/logs:/usr/share/elasticsearch/logs

    ports:
      - "9200:9200"
      - "9300:9300"

    restart: always

    networks:
      - elastic

  kibana:
    container_name: my-kibana
    image: kibana:7.7.1

    volumes:
      - /data/elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml

    ports:
      - "5601:5601"

    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
    networks:
      - elastic

  logstash:
    container_name: my-logstash
    image: logstash:7.7.1
    volumes:
      - /data/elk/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - /data/elk/logstash/conf.d/:/data/docker/logstash/conf.d/
    ports:
      - "5044:5044"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
    networks:
      - elastic

networks:
  elastic:
    driver: bridge # 后续同网的容器可以使用容器名称进行访问。